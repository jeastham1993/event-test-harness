AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 29
    MemorySize: 256
    Environment:
      Variables:
        TABLE_NAME: !Ref EventTable
        RUST_LOG: "info"
        EVENT_HARNESS_LAMBDA: "true"
    Architectures:
      - arm64
  Api:
    Cors:
      AllowMethods: "'POST, GET, PUT, DELETE'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:
  GetEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: 214365161190.dkr.ecr.us-east-1.amazonaws.com/rust-event-harness:0.0.1
      FunctionName: GetEventsFunction
      Environment:
        Variables:
          EVENT_SOURCE: "http"
          EVENT_HARNESS_PROPERTY_JSON_POINTER_PATH: ""
      Events:
        GetProduct:
          Type: Api
          Properties:
            Path: /events/{identifier}
            Method: get
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
              Resource: !GetAtt EventTable.Arn
  
  ################################################
  ############# Background Workers ###############
  ################################################

  HandleEvents:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: 214365161190.dkr.ecr.us-east-1.amazonaws.com/rust-event-harness:0.0.1
      FunctionName: test-harness-handle-events
      Environment:
        Variables:
          EVENT_SOURCE: "sqs"
          EVENT_HARNESS_PROPERTY_JSON_POINTER_PATH: "/orderNumber"
      Events:
        IntegrationQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt OrderCompletedQueue.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
    Metadata:
      BuildMethod: rust-cargolambda
      Binary: rust_event_harness
      
  OrderCompletedQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "OrderCompletedQueue"

  EventTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TestHarnessTable
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  EventBridgeFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: 214365161190.dkr.ecr.us-east-1.amazonaws.com/rust-event-harness:0.0.1
      Environment:
        Variables:
          EVENT_SOURCE: eventbridge
          EVENT_HARNESS_PROPERTY_JSON_POINTER_PATH: /orderNumber
      Events:
        OrderCreated:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source: ["order"]
              detail-type: ["order.orderCreated"]
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
    Metadata:
      BuildMethod: rust-cargolambda
      Binary: rust_event_harness

Outputs:
  RustProductApiEndpoint:
    Description: User API Endpoint
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
    Export:
      Name: UserApiEndpoint